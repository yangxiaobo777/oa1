<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.oa.dao.EmployeeDao">
  <select id="queryEmployee" parameterType="employee" resultType="employee">
    select userId,userName,post,sex,workAddress,status
    from employee
    where
    status = '0'
    <if test="userName!=null and userName!=''">
      and userName like concat('%',#{userName},'%')
    </if>
    <if test="offset!='' and limit!=''">
      and limit #{offset},#{limit}
    </if>

  </select>

  <select id="queryEmployeeNum" parameterType="employee" resultType="int">
    select count(*)
    from employee
    where
    status = '0'
    <if test="userName!=null and userName!=''">
      and userName like concat('%',#{userName},'%')
    </if>
  </select>

  <select id="queryEmployeeToExcel" parameterType="employee" resultType="employee">
    select userId,userName,post,sex,workAddress,status
    from employee
    where
    status = '0'
    <if test="userName!=null and userName!=''">
      and userName like concat('%',#{userName},'%')
    </if>
  </select>

  <insert id="addEmployee" parameterType="employee">
        insert into employee
        (userId,userName,post,sex,workAddress,status)
        values
        (#{userId},#{userName},#{post},#{sex},#{workAddress},'0')
    </insert>

  <insert id="branchAddEmployee" parameterType="employee">
    insert into employee
    (userId,userName,post,sex,workAddress,status)
    values
    <foreach collection="employs" item="employ" separator=",">
      (#{userId},#{userName},#{post},#{sex},#{workAddress},'0')
    </foreach>

  </insert>

  <update id="updateEmployee" parameterType="employee">
        update employee set userId = #{newUserId,jdbcType=VARCHAR}
                       ,userName = #{userName,jdbcType=VARCHAR}
                       ,post = #{post,jdbcType=VARCHAR}
                       ,sex = #{sex,jdbcType=VARCHAR}
                       ,workAddress = #{workAddress,jdbcType=VARCHAR}
        where userId = #{oldUserId}
    </update>

  <delete id="deleteEmployee" parameterType="string">
        update employee set status = '9' where userId = #{userId}
    </delete>

  <delete id="branchDeleteEmployee" parameterType="string">
    update employee set status = '9' where userId in
    <foreach collection="userIds" item="userId" open="(" close=")" separator=",">
      #{userId}
    </foreach>
  </delete>

  <select id="queryIsExistEmployee" parameterType="string" resultType="int">
        select count(*) from employee where userId = #{userId}
  </select>

  <select id="queryAllEmployee" resultType="string">
    select userid from employee where status = '0'
  </select>

</mapper>